service: face-replacer-e2e

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x

# you can overwrite defaults here
#  stage: dev
  region: ap-northeast-1

# you can add statements to the Lambda function's IAM Role here
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "s3:PutObject"
          Resource:
            Fn::Join:
              - ""
              - - "arn:aws:s3:::"
                - !Ref TestArtifactsBucket
                - "/*"
# you can define service wide environment variables here
  environment:
    test_artifacts_bucket: !Ref TestArtifactsBucket

custom:
  # 重要!!! 一意の名前をつけてください !!!
  suffix: "mk"
  serverless-layers:
    # 重要!!! 自分のバケットに変更してください !!!
    layersDeploymentBucket: 20220527-layers-bucket-mk
    dependenciesPath: ./package.json

# you can add packaging information here
package:
  excludeDevDependencies: true # なぜかうまく機能しないのでpatternsで指定する
  patterns:
    - '!chrome_aws_lambda.zip'
#  patterns:
#    - '!exclude-me.js'
#    - '!exclude-me-dir/**'
#    - include-me.js
#    - include-me-dir/**

layers:
  chrome:
    package:
      artifact: chrome_aws_lambda.zip

functions:
  hello:
    handler: handler.hello
    memorySize: 512
    timeout: 60
    layers:
      - !Ref ChromeLambdaLayer
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - httpApi:
#          path: /users/create
#          method: get
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
resources:
  Resources:
    # テストの結果を出力するバケット
    TestArtifactsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: "20220527-face-replacer-test-${self:custom.suffix}-${sls:stage}"
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

plugins:
  - serverless-layers

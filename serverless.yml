service: face-replacer-e2e

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x

# you can overwrite defaults here
#  stage: dev
  region: ap-northeast-1

# you can add statements to the Lambda function's IAM Role here
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "s3:PutObject"
          Resource:
            Fn::Join:
              - ""
              - - "arn:aws:s3:::"
                - !Ref TestArtifactsBucket
                - "/*"
        - Effect: "Allow"
          Action:
            - "s3:ListBucket"
            - "s3:*"
          Resource:
            - Fn::Join:
              - ""
              - - "arn:aws:s3:::"
                - ${param:OriginalBucketName}
                - "/*"
            - Fn::Join:
              - ""
              - - "arn:aws:s3:::"
                - ${param:OriginalBucketName}
        - Effect: "Allow"
          Action:
            - "s3:ListBucket"
            - "s3:*"
          Resource:
            - Fn::Join:
              - ""
              - - "arn:aws:s3:::"
                - ${param:ProcessedBucketName}
                - "/*"
            - Fn::Join:
              - ""
              - - "arn:aws:s3:::"
                - ${param:ProcessedBucketName}
        - Effect: "Allow"
          Action:
            - "dynamodb:*"
          Resource:
            - "${param:DynamoTableArn}"
        
# you can define service wide environment variables here
  environment:
    TestArtifactsBucket: !Ref TestArtifactsBucket
    ProcessedBucketName: ${param:ProcessedBucketName}
    OriginalBucketName: ${param:OriginalBucketName}
    StaticWebSiteUrl: ${param:StaticWebSiteUrl}
    DynamoTableName: ${param:DynamoTableName}

params:
  default:
    ProcessedBucketName: ""
    OriginalBucketName: ""
    StaticWebSiteUrl: ""
    HttpApiUrl: ""
    DynamoTableName: ""
    DynamoTableArn: ""

custom:
  # 重要!!! 一意の名前をつけてください !!!
  suffix: "mk"
  serverless-layers:
    # 重要!!! 自分のバケットに変更してください !!!
    layersDeploymentBucket: 20220527-layers-bucket-mk
    dependenciesPath: ./package.json

# you can add packaging information here
package:
  excludeDevDependencies: true # なぜかうまく機能しないのでpatternsで指定する
  patterns:
    - '!chrome_aws_lambda.zip'
#  patterns:
#    - '!exclude-me.js'
#    - '!exclude-me-dir/**'
#    - include-me.js
#    - include-me-dir/**

layers:
  chrome:
    package:
      artifact: chrome_aws_lambda.zip

functions:
  e2e:
    handler: e2e.test
    memorySize: 512
    timeout: 120
    layers:
      - !Ref ChromeLambdaLayer
  init:
    handler: init.init
    memorySize: 256
    timeout: 20
  s3put:
    handler: s3put.s3put
    memorySize: 256
    timeout: 20


stepFunctions:
  stateMachines:
    E2ETestStateMachine:
      definition:
        StartAt: Init
        States:
          Init:
            Type: Task
            Resource:
              Fn::GetAtt: [init, Arn]
            Next: S3Put
          S3Put:
            Type: Task
            Resource:
              Fn::GetAtt: [s3put, Arn]
            Next: E2E
          E2E:
            Type: Task
            Resource:
              Fn::GetAtt: [e2e, Arn]
            Next: Succeed
          Succeed:
            Type: Succeed

# you can add CloudFormation resource templates here
resources:
  Resources:
    # テストの結果を出力するバケット
    TestArtifactsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: "20220527-face-replacer-test-${self:custom.suffix}-${sls:stage}"
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

plugins:
  - serverless-layers
  - serverless-step-functions
